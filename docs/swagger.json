{
    "swagger": "2.0",
    "info": {
      "description": "This documentation defines API instrumentation for [https://quick-mcq-backend.herokuapp.com/]. ",
      "version": "1.0.5",
      "title": "MCQ-Backend",
      "termsOfService": "http://swagger.io/terms/",
      "contact": {
        "email": "apiteam@swagger.io"
      },
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      }
    },
    "host": "https://quick-mcq-backend.herokuapp.com/",
    "basePath": "api/v1",
    "tags": [
      {
        "name": "user",
        "description": "Operations about user",
        "externalDocs": {
          "description": "Authentication stories",
        }
      },
      {
        "name": "assessments",
        "description": "Operations about assessments",
        "externalDocs": {
          "description": "Assessments stories",
        }
      }
    ],
    "schemes": [
      "https",
      "http"
    ],
    "paths": {
      "api/v1/exams/write-exams": {
        "get": {
          "tags": [
            "assessment"
          ],
          "summary": "Randomly gets 2 seeded Passages with 10 questions for each",
          "description": "",
          "operationId": "writeExams",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "authorization",
              "in": "header",
              "description": "bearer token",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation"
            }
          },
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets"
              ]
            }
          ]
        }
      },


      "api/v1/users/forgotpassword": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "sends password reset link to user's email",
          "description": "",
          "operationId": "forgotpassword",
          "produces": [
            "application/json",
          ],
          "parameters": [
            {
              "name": "email",
              "in": "body",
              "description": "The registered email user would received link through",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
            },
            "400": {
              "description": "Invalid email"
            },
            "404": {
              "description": "User not found"
            }
          }
        },
        "put": {
          "tags": [
            "user"
          ],
          "summary": "api/v1/users/updatepassword",
          "description": "Updates user's password",
          "operationId": "updatePassword",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "password",
              "in": "body",
              "description": "User password",
              "required": true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "confirmPassword",
              "description": "password confirmation",
              "required": true
            }
          ],
          "responses": {
            "400": {
              "description": "password too short || password doesn't match"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      },
      "api/v1/users/signin": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "signs user into the app",
          "description": "",
          "operationId": "SignIn",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "email",
              "in": "body",
              "description": "Registered user email",
              "required": true,
              "type": "string"
            },
            {
              "name": "password",
              "in": "body",
              "description": "The user password in clear text",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "headers": {
                "X-Expires-After": {
                  "type": "string",
                  "format": "date-time",
                  "description": "date in UTC when token expires"
                },
                "X-Rate-Limit": {
                  "type": "integer",
                  "format": "int32",
                  "description": "calls per hour allowed by the user"
                }
              },
              "schema": {
                "type": "string"
              }
            },
            "400": {
              "description": "Invalid username/password supplied"
            }
          }
        }
      },
      "api/v1/users/signup": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "Signs up new user",
          "description": "",
          "operationId": "signUp",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "first_name",
              "description": "User's first name",
              "required": true
            },
            {
              "in": "body",
              "name": "last_name",
              "description": "User's last name",
              "required": true
            },
            {
              "in": "body",
              "name": "email",
              "description": "User's valid email",
              "required": true
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      }
    },
    "securityDefinitions": {
      "api_key": {
        "type": "apiKey",
        "name": "authorization",
        "in": "header"
      }
    },

    "externalDocs": {
      "description": "Find out more about Swagger",
      "url": "http://swagger.io"
    }
  }